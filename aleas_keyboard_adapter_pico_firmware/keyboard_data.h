// (C) Alvaro Alea Fdz. 2025

#ifndef KEYBOARD_DATA_H
#define KEYBOARD_DATA_H
//--------------------------------------------------------------------+
// MACRO CONSTANT TYPEDEF PROTYPES
//--------------------------------------------------------------------+

static uint8_t const keycode2ST[128][4] =  { // This is a string only for debugging.
    "   ",
    "   ",
    "   ",
    "   ",
    "a  ",
    "b  ",
    "c  ",
    "d  ",
    "e  ",
    "f  ",
    "g  ", // 10
    "h  ",
    "i  ",
    "j  ",
    "k  ",
    "l  ",
    "m  ",
    "n  ",
    "o  ",
    "p  ",
    "q  ", // 20
    "r  ",
    "s  ",
    "t  ",
    "u  ",
    "v  ",
    "w  ",
    "x  ",
    "y  ",
    "z  ",
    "1  ", //30
    "2  ",
    "3  ",
    "4  ",
    "5  ",
    "6  ",
    "7  ",
    "8  ",
    "9  ",
    "0  ",
    "ENT", //40
    "ESC",
    "   ",
    "TAB",
    "SPC",
    "-  ",
    "=  ",
    "[  ",
    "]  ",
    "\\  ",
    "#  ", //50
    "n~ ",
    "g2 ",
    "g1 ",
    ",  ",
    ".  ",
    "/  ",
    "CLC",
    "F1 ",
    "F2 ",
    "F3 ", //60
    "F4 ",
    "F5 ",
    "F6 ",
    "F7 ",
    "F8 ",
    "F9 ",
    "F10",
    "   ",
    "   ",
    "   ", //70
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "[>]",
    "[<]", //80
    "[v]",
    "[^]",
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "   ",
    "1  " ,
    "2  " , //90
    "3  " ,
    "4  " ,
    "5  " ,
    "6  " ,
    "7  " ,
    "8  " ,
    "9  " ,
    "0  " ,
    "  " ,
    "  " , //100
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " , //110
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " , //120
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " ,
    "  " 
};

// This table is adress with key pressed, and with key pressed + SHIFT
// CTRL + ALT are considered alwais independent.
static int16_t const keycode2QL[128][2] =  { 
    {0, 0   }, /* 0x00 */ 
    {0, 0   }, /* 0x01 */ 
    {0, 0   }, /* 0x02 */ 
    {0, 0   }, /* 0x03 */ 
    {27, 27     }, /* 0x04 a*/ 
    {43, 43     }, /* 0x05 b*/ 
    {42, 42     }, /* 0x06 c*/ 
    {28, 28     }, /* 0x07 d*/ 
    {11, 11     }, /* 0x08 e*/ 
    {35, 35     }, /* 0x09 f*/ 
    {36, 36     }, /* 0x0a g 10 */ 
    {29, 29     }, /* 0x0b h*/ 
    {21, 21     }, /* 0x0c i*/ 
    {30, 30     }, /* 0x0d j*/ 
    {37, 37     }, /* 0x0e k*/ 
    {31, 31     }, /* 0x0f l*/ 
    {44, 44     }, /* 0x10 m*/ 
    {52, 52     }, /* 0x11 n*/ 
    {22, 22     }, /* 0x12 o*/ 
    {32, 32     }, /* 0x13 p*/ 
    {10, 10     }, /* 0x14 q 20 */ 
    {19, 19     }, /* 0x15 r*/ 
    {34, 34     }, /* 0x16 s*/ 
    {12, 12     }, /* 0x17 t*/ 
    {14, 14     }, /* 0x18 u*/ 
    {51, 51     }, /* 0x19 v*/ 
    {17, 17     }, /* 0x1a w*/ 
    {50, 50     }, /* 0x1b x */ 
    {20, 20     }, /* 0x1c y*/ 
    {41, 41     }, /* 0x1d z*/ 
    {26, 26     }, /* 0x1e 1 30 */ \
    {9, 9       }, /* 0x1f 2 */ \
    {25, 25     }, /* 0x20 3*/ \
    {4, 4       }, /* 0x21 4*/ \
    {5, 5       }, /* 0x22 5*/ \
    {13, 13     }, /* 0x23 6 */ \
    {6, 6       }, /* 0x24 7*/ \
    {15, 15     }, /* 0x25 8*/ \
    {23, 23     }, /* 0x26 9*/ \
    {16, 16     }, /* 0x27 0*/ \
    {63, 63     }, /* 0x28 ENTER 40 */ \
    {58, 58     }, /* 0x29 ESC */ \
    {57, 57-64  }, /* 0x2a BORRAR*/ \
    {18, 18     }, /* 0x2b TAB */ \
    {60, 60     }, /* 0x2c SPC */ \
    {24, 24     }, /* 0x2d -*/ \
    {40, 40     }, /* 0x2e =*/ \
    {39, 39     }, /* 0x2f [ */ \
    {47, 47     }, /* 0x30 ] */ \
    {46, 46     }, /* 0x31 } */ \
    {0, 0       }, /* 0x32 50 */ \
    {48, 48     }, /* 0x33 Ã‘ */ \
    {38, 38     }, /* 0x34 { */ \
    {64, 64     }, /* 0x35 `*/ \
    {54, 54     }, /* 0x36 , */ \
    {45, 45     }, /* 0x37 . */ \
    {56, 56     }, /* 0x38 / */ \
    {33, 33     }, /* 0x39 CAPSLOCK*/ \
    {1, 1       }, /* 0x3a F1 */ \
    {2, 2       }, /* 0x3b F2 */ \
    {3, 3       }, /* 0x3c F3 60 */ \
    {7, 7       }, /* 0x3d F4 */ \
    {8, 8       }, /* 0x3e F5 */ \
    {1+64, 1    }, /* 0x3f F1+S */ \
    {2+64, 2    }, /* 0x40 F2+S*/ \
    {3+64, 3    }, /* 0x41 F3+S*/ \
    {7+64, 7    }, /* 0x42 F4+S*/ \
    {8+64, 8    }, /* 0x43 F5+S*/ \
    {0, 0       }, /* 0x44 */ \
    {0, 0       }, /* 0x45 */ \
    {0, 0       }, /* 0x46 70 */ \
    {0, 0       }, /* 0x47 */ \
    {0, 0       }, /* 0x48 */ \
    {0, 0       }, /* 0x49 */ \
    {0, 0       }, /* 0x4a */ \
    {0, 0       }, /* 0x4b */ \
    {0, 0       }, /* 0x4c */ \
    {0, 0       }, /* 0x4d */ \
    {0, 0       }, /* 0x4e */ \
    {59, 5      }, /* 0x4f -> */ \
    {57, 57     }, /* 0x50 <- 80*/ \
    {62, 62     }, /* 0x51 V */ \
    {61, 6      }, /* 0x52 ^ */ \
    {0, 0       }, /* 0x53 */ \
    {56, 56-64  }, /* 0x54 / */ \
    {15+64, 15  }, /* 0x55 * */ \
    {24, 24-64  }, /* 0x56 - */ \
    {40+64, 40  }, /* 0x57 + */ \
    {63, 63-64  }, /* 0x58 enter */ \
    {26, 26-64  }, /* 0x59 1*/ \
    {9, 9-64    }, /* 0x5a 2*/ \
    {25, 25-64  }, /* 0x5b 3*/ \
    {4, 4-64    }, /* 0x5c 4*/ \
    {5, 5-64    }, /* 0x5d 5*/ \
    {13, 13-64  }, /* 0x5e 6*/ \
    {6, 6-64    }, /* 0x5f 7*/ \
    {15, 15-64  }, /* 0x60 8*/ \
    {23, 23-64  }, /* 0x61 9*/ \
    {16, 16-64  }, /* 0x62 0*/ \
    {45, 45-64  }, /* 0x63 .*/ \
    {0, 0       }, /* 0x64 */ \
    {0, 0       }, /* 0x65 */ \
    {0, 0       }, /* 0x66 */ \
    {0, 0       }, /* 0x67 */ \
  
};
#endif